import Head from "next/head";
import { useForm } from "react-hook-form";
import { useRef, useState } from "react";
import Image from "next/image";
import SignatureCanvas from "react-signature-canvas";
import axios from "axios";
import createPdf from "./api/createPDF";
import Logo from "../assets/logo.svg";
import { backendURL } from "../config/axios";

export default function Home() {
  const {
    register,
    handleSubmit,
    reset,
    formState: { errors },
  } = useForm();
  const [isSent, setIsSent] = useState();
  const [isEmpty, setIsEmpty] = useState();

  const canvasRef = useRef();

  async function onSubmit(data) {
    const date = new Date();
    const signDate = date.toLocaleDateString();

    const { name, email } = data;

    if (canvasRef.current.isEmpty() === false) {
      setIsSent(true);
      createPdf(canvasRef.current.toDataURL(), {
        ...data,
        signDate,
      })
      .then(
        (pdfRes) =>
          axios
            .post(`${backendURL}/sendMail`, {
              name,
              email,
              signDate,
              pdfRes,
            })
      )
      .then(() => {
        canvasRef.current.clear();
        reset();
        setIsSent(true); 
        setIsEmpty(false);
      })
      .catch((err) => {
        setIsSent("Wystąpił problem");
        console.log(err);
      })
    } else {
      setIsEmpty(true);
    }
  }

  return (
    <>
      <Head>
        <title>Formularz umowy kupna - sprzedaży</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex flex-col w-full h-max justify-center items-center gap-10 px-[2vw] py-10">
        <div className="w-[90%] m-auto flex justify-center">
          <Image src={Logo} alt="" />
        </div>

        <form
          className="grid gap-3 h-max grid-cols-2 my-11"
          onSubmit={handleSubmit(onSubmit)}
        >
          <p className="font-bold mt-4 col-span-2 mb-2 text-lg">Dane osobowe</p>
          <div className="flex flex-col col-span-2">
            <p className="col-span-2 font-medium text-sm mb-1">
              Imię i nazwisko
              {errors.name?.type === "required" && (
                <span className="text-red-500 ml-3 text-sm">
                  Imię jest wymagane*
                </span>
              )}
            </p>
            <input
              type="text"
              {...register("name", { required: true })}
              required
              placeholder="Imię i nazwisko"
              className="border rounded-lg p-2 outline-none col-span-2"
            />
          </div>
          <div className="flex flex-col col-span-2">
            <p className="col-span-1 font-medium text-sm mb-1">
              Adres email
            </p>
            <input
              type="email"
              {...register("email", {
                pattern: /^\w+([.-]?\w+)@\w+([.-]?\w+)(.\w{2,3})+$/,
              })}
              placeholder="Adres email"
              className="border rounded-lg p-2 outline-none col-span-1"
            />
          </div>
          <div className="flex flex-col col-span-2">
            <p className="col-span-1 font-medium text-sm mb-1">
              Numer telefonu
            </p>
            <input
              type="number"
              {...register("phone")}
              placeholder="Numer telefonu"
              className="border rounded-lg p-2 outline-none col-span-1"
            />
          </div>
          <div className="flex flex-col col-span-2">
            <p className="font-semibold text-sm mb-1">
              Pełny adres sprzedającego
              {errors.address?.type === "required" && (
                <span className="text-red-500 ml-3 text-sm">
                  Adres jest wymagany*
                </span>
              )}
            </p>
            <input
              type="text"
              {...register("address", { required: true })}
              required
              placeholder="Adres zamieszkania"
              className="border rounded-lg p-2 outline-none"
            />
          </div>
          <p className="font-bold mt-7 col-span-2 text-lg">Dane towarowe</p>
          <div className="flex flex-col col-span-2">
            <p className="font-semibold text-sm mb-1">
              Nazwa towaru
              {errors.shoeName?.type === "required" && (
                <span className="text-red-500 ml-3 text-sm">
                  Podaj nazwę towaru*
                </span>
              )}
            </p>
            <input
              type="text"
              {...register("shoeName", { required: true })}
              required
              placeholder="Nazwa towaru"
              className="border rounded-lg p-2 outline-none col-span-2"
            />
          </div>
          <div className="flex flex-col col-span-2">
            <p className="font-semibold text-sm mb-1">
              Rozmiar
              {errors.size?.type === "required" && (
                <span className="text-red-500 ml-3 text-sm">
                  Podaj rozmiar towaru*
                </span>
              )}
            </p>
            <input
              type="text"
              {...register("size", { required: true })}
              required
              placeholder="Rozmiar towaru"
              className="border rounded-lg p-2 outline-none col-span-2"
            />
          </div>
          <div className="col-span-2 relative">
            <p className="font-semibold text-sm mb-1">
              Cena za sztukę
              {errors.price?.type === "required" && (
                <span className="text-red-500 ml-3 text-sm">
                  Podaj cenę towaru*
                </span>
              )}
            </p>
            <input
              type="number"
              {...register("price", { required: true })}
              required
              placeholder="Cena za sztukę brutto"
              className="border rounded-lg p-2 outline-none w-full"
            />
            <span className="absolute font-semibold text-sm right-3 translate-y-1/2">
              PLN
            </span>
          </div>
          <div className="col-span-2 relative">
            <p className="font-semibold text-sm mb-1">
              Cena całościowa
              {errors.totalPrice?.type === "required" && (
                <span className="text-red-500 ml-3 text-sm">
                  Podaj całościową cenę*
                </span>
              )}
            </p>
            <input
              type="number"
              {...register("totalPrice", { required: true })}
              required
              placeholder="Cena łączna brutto"
              className="border rounded-lg p-2 outline-none w-full"
            />
            <span className="absolute font-semibold text-sm right-3 translate-y-1/2">
              PLN
            </span>
          </div>
          <p className="font-bold mt-7 col-span-2 text-lg">Sposób płatności</p>
          <select
            {...register("paymentMethod", { required: true })}
            className="col-span-2 border rounded-lg p-2 outline-none font-regular"
            defaultValue="BLIK"
          >
            <option className="outline-none">Przelew na konto</option>
            <option className="outline-none">
              Przelew do 3 dni od daty dostarczenia towaru
            </option>
            <option className="outline-none">
              Gotówka / pobranie - firma kurierska
            </option>
            <option className="outline-none">
              Gotówka / pobranie - odbiór na miejscu
            </option>
            <option className="outline-none">Przelew BLIK</option>
          </select>
          <div className="flex flex-col col-span-2">
            <p className="font-bold text-lg  my-4 mt-7">
              Podpis sprzedającego
              {isEmpty && (
                <span className="text-red-500 ml-3 text-sm">Podaj podpis*</span>
              )}
            </p>
            <button></button>
            <SignatureCanvas
              penColor="black"
              canvasProps={{
                className: "canvasSignature",
              }}
              ref={canvasRef}
            /> 
          </div>
          <button
            type="submit"
            className={`${
              isSent ? "bg-[#00cc00]" : "bg-black"
            } text-white col-span-2 py-2 rounded-md`}
            disabled={isSent ? true : false}
          >
            {isSent ? "Dziękujemy!" : "Podpisz umowę"}
          </button>
        </form>
      </main>
    </>
  );
}
